import React, { useEffect, useRef, useState } from "react";

function App() {
  const [count, setCount] = useState(null);
  const [boxes, setBoxes] = useState([]);
  const videoRef = useRef(null);
  const canvasRef = useRef(null);

  // 1) –ó–∞–ø—É—Å–∫ –∫–∞–º–µ—Ä—ã
  useEffect(() => {
    const startCamera = async () => {
      try {
        const stream = await navigator.mediaDevices.getUserMedia({ video: true });
        videoRef.current.srcObject = stream;
      } catch (e) {
        console.error("–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–º–µ—Ä–µ:", e);
      }
    };
    startCamera();
  }, []);

  // 2) –ê–≤—Ç–æ–¥–µ—Ç–µ–∫—Ç –∫–∞–∂–¥—ã–µ 0.5 —Å
  useEffect(() => {
    const interval = setInterval(handleDetect, 500);
    return () => clearInterval(interval);
  }, []);

  // 3) –ó–∞–ø—Ä–æ—Å –∫ FastAPI
  const handleDetect = async () => {
    try {
      const res = await fetch("http://localhost:8000/api/v1/detect-live");
      const data = await res.json();
      setCount(data.count);
      setBoxes(data.boxes || []);
    } catch (e) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", e);
    }
  };

  // 4) –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –±–æ–∫—Å–æ–≤ –Ω–∞ canvas
  useEffect(() => {
    const video = videoRef.current;
    const canvas = canvasRef.current;
    if (!video || !canvas || boxes.length === 0) return;

    // —É—Å—Ç–∞–Ω–æ–≤–∏–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–∞–Ω–≤–∞—Å–∞ —Ä–∞–≤–Ω—ã–º —Ä–µ–∞–ª—å–Ω–æ–º—É –ø–æ—Ç–æ–∫—É
    canvas.width  = video.videoWidth;
    canvas.height = video.videoHeight;

    const ctx = canvas.getContext("2d");
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    // —Ç–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ —Ä–∏—Å—É–µ–º –≤ —Ç–µ—Ö –∂–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö, —á—Ç–æ –∏ –º–æ–¥–µ–ª—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
    boxes.forEach(({ xmin, ymin, xmax, ymax }) => {
      ctx.strokeStyle = "red";
      ctx.lineWidth   = 2;
      ctx.strokeRect(xmin, ymin, xmax - xmin, ymax - ymin);
    });
  }, [boxes]);

  return (
    <div style={{ padding: "2rem", textAlign: "center", fontFamily: "Arial, sans-serif" }}>
      <h1>üéì YOLO Student Counter</h1>

      <div style={{ position: "relative", display: "inline-block" }}>
        {/* –≤–∏–¥–µ–æ */}
        <video
          ref={videoRef}
          autoPlay
          muted
          playsInline
          style={{ width: "640px", height: "auto" }}
        />
        {/* –∫–∞–Ω–≤–∞—Å —Å —Ç–µ–º–∏ –∂–µ CSS-—Ä–∞–∑–º–µ—Ä–∞–º–∏ */}
        <canvas
          ref={canvasRef}
          style={{
            position: "absolute",
            top: 0,
            left: 0,
            width: "640px",
            height: "auto",
            pointerEvents: "none",
          }}
        />
      </div>

      {count !== null && (
        <p style={{ marginTop: "1rem", fontSize: "18px" }}>üßç –ù–∞–π–¥–µ–Ω–æ: {count}</p>
      )}
    </div>
  );
}

export default App;